// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package eventmanagement.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the EventManagement module
	public static eventmanagement.proxies.Feedback createFeedback(IContext context, eventmanagement.proxies.Session _session)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Session", _session == null ? null : _session.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("EventManagement.CreateFeedback").withParams(params).execute(context);
		return result == null ? null : eventmanagement.proxies.Feedback.initialize(context, result);
	}
	public static eventmanagement.proxies.EventPhoto createPhoto(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("EventManagement.CreatePhoto").withParams(params).execute(context);
		return result == null ? null : eventmanagement.proxies.EventPhoto.initialize(context, result);
	}
	public static void deletePhoto(IContext context, eventmanagement.proxies.EventPhoto _eventPhoto)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EventPhoto", _eventPhoto == null ? null : _eventPhoto.getMendixObject());
		Core.microflowCall("EventManagement.DeletePhoto").withParams(params).execute(context);
	}
	public static eventmanagement.proxies.AddressEntity getExampleAddress(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("EventManagement.GetExampleAddress").withParams(params).execute(context);
		return result == null ? null : eventmanagement.proxies.AddressEntity.initialize(context, result);
	}
	public static void onSavePhoto(IContext context, eventmanagement.proxies.EventPhoto _eventPhoto)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EventPhoto", _eventPhoto == null ? null : _eventPhoto.getMendixObject());
		Core.microflowCall("EventManagement.OnSavePhoto").withParams(params).execute(context);
	}
	public static void saveAttendee(IContext context, eventmanagement.proxies.Attendee _newAttendee)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("NewAttendee", _newAttendee == null ? null : _newAttendee.getMendixObject());
		Core.microflowCall("EventManagement.SaveAttendee").withParams(params).execute(context);
	}
}